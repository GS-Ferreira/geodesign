% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jod.R
\name{JOD}
\alias{JOD}
\title{Joint Optimal Design}
\usage{
JOD(geodata, add.pts, kcontrol, kgrid, num.gen, gen.size, elite.size,
  parallel = T)
}
\arguments{
\item{geodata}{A geodata object containing the initial sample}

\item{add.pts}{Number of points to be added to the initial sample}

\item{kcontrol}{Parameters for kriging as a krige.geoR object.
See the help for krige.control for further details}

\item{kgrid}{malha de krigagem. TODO mudar isso! botar
pra ser definido por 'n', que nem no SOD}

\item{num.gen}{Number of generations (iterations)}

\item{gen.size}{Number of samples in each iteration}

\item{elite.size}{Number of samples in elite. Should be lesser than or
equal to gen.size \%/\% 2 TODO escrever isso direito}
}
\value{
A list with all of the generations and values of the utility function
which can be plotted as shown in the examples. TODO RETORNAR SÓ A ÚLTIMA
}
\description{
Given a set of georeferenced measurements, this function finds 'add.pts' new
locations for sampling, calculated jointly using a GA-based heuristic.
}
\examples{
add.pts <- 4 # Number of points to be added
n <- 10 # Number of points to define the candidate grid
N <- 15 # Number of points for the simulation
gen.size <- 10 # Number of samples in each iteration
elite.size <- 4 # Number of samples in elite
num.gen <- 50 # Number of generations (iterations)

library(geoR)

set.seed(400)
geodata <- grf(N, cov.pars = c(20, 0.45), nugget = 1)
beta1 <- mean(geodata$data)
emv <- ajemv(geodata,ini.phi = 0.4,ini.sigma2 = 10, pepita = 1,
             modelo = 'exponential', plot = F)
kcontrol <- krige.control(type.krige = "SK",
                          trend.d = "cte",
                          nugget = emv$tausq,
                          beta = beta1,
                          cov.pars = emv$cov.pars)
kgrid <- expand.grid(seq(0, 1, l = n), seq(0, 1, l = n))

newsample <- JOD(geodata, add.pts, kcontrol, kgrid, num.gen, gen.size,
elite.size)

utili <- NULL
for(i in 1:num.gen) utili[i] <- mean(newsample$utilidades[[i]][1])
plot(1:num.gen, utili[1:num.gen], type='l')

}
